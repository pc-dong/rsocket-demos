plugins {
    id 'java'
//    id 'org.springframework.boot' version '2.7.5'
//    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

def withoutBom = {
    exclude group: 'org.apache.jmeter', module: 'bom'
}

group 'cn.dpc'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation ('io.rsocket:rsocket-core:1.1.3')
//    implementation 'io.projectreactor:reactor-core:3.5.0'
//    implementation('org.springframework.boot:spring-boot-starter-rsocket:2.7.5') {
//        exclude group: 'org.slf4j', module:'*'
//        exclude group: 'org.slf4j', module:'slf4j-log4j12'
//        exclude group: 'log4j', module: ' log4j'
//    }
    implementation'org.springframework:spring-messaging:5.3.23'
    implementation'org.springframework:spring-web:5.3.23'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.14.0'
    implementation 'io.rsocket:rsocket-transport-netty:1.1.3'
    compileOnly 'org.apache.jmeter:ApacheJMeter_java:5.5', withoutBom
    testImplementation 'org.apache.jmeter:ApacheJMeter_java:5.5', withoutBom
}

jar {
    enabled=true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes "Main-Class": "cn.dpc.Main"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }

    }
}

//task customFatJar(type: Jar) {
//    manifest {
//        attributes 'Main-Class': 'com.baeldung.fatjar.Application'
//    }
//    baseName = 'all-in-one-jar'
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}

test {
    useJUnitPlatform()
}