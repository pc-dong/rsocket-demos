import de.qualersoft.jmeter.gradleplugin.task.*
plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "de.qualersoft.jmeter" version "2.4.0"
//    id "net.foragerr.jmeter" version "1.0.5-2.13"
}

def withoutBom = {
    exclude group: 'org.apache.jmeter', module: 'bom'
}

group 'cn.dpc'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'io.rsocket:rsocket-core:1.1.3'
    implementation'org.springframework:spring-messaging:5.3.23'
    implementation'org.springframework:spring-web:5.3.23'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.14.0'
    implementation 'io.rsocket:rsocket-transport-netty:1.1.3'
    compileOnly 'org.apache.jmeter:ApacheJMeter_java:5.5', withoutBom
    testImplementation 'org.apache.jmeter:ApacheJMeter_java:5.5', withoutBom
}

jar {
    enabled=true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes "Main-Class": "cn.dpc.Main"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }

    }
}

jmeter {
//    jmTestFiles = [file("src/test/jmeter/RSocketTest.jmx")]
////    jmUserPropertiesFiles = [file("src/test/jmeter/jmeter.properties")]
//    jmSystemPropertiesFiles = [file("src/test/jmeter/server.properties")]
//    enableExtendedReports = true
//    maxHeapSize = '1024m'
//    minHeapSize = '1024m'
    jmxRootDir = file("src/test/jmeter/")
    resultDir = file("src/test/jmeter/")
    reportDir = file("src/test/jmeter/")
    maxHeap = '1024m'
}

tasks.register('runJemeter', JMeterRunTask) {
    jmxFile = "RSocketTest.jmx"
}

tasks.register('reportJemeter', JMeterReportTask) {
    dependsOn tasks.withType(JMeterRunTask)
    jmxFile = "RSocketTest.jmx"
}


tasks.register('edit', JMeterGuiTask) {
    jmxFile = "RSocketTest.jmx"
}

test {
    useJUnitPlatform()
}